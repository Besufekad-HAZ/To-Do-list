(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>u});var t=e(537),o=e.n(t),i=e(645),a=e.n(i),c=e(667),d=e.n(c),s=new URL(e(776),e.b),A=a()(o()),l=d()(s);A.push([n.id,'* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  color: #ffffff;\r\n  font-family: "lato", sans-serif;\r\n}\r\n\r\nbody {\r\n  font-family: "lato", sans-serif;\r\n  font-weight: 300;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: url('+l+");\r\n  background-repeat: no-repeat;\r\n  background-size: 70% 90vh;\r\n  background-position: center;\r\n}\r\n\r\n.to-do-container {\r\n  width: 60%;\r\n  max-width: 1000px;\r\n  margin: 8% auto;\r\n  border: 2px solid rgb(255, 255, 255);\r\n  background-color: rgb(5, 0, 0,0.6);\r\n  padding: 5% 10%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.form-container {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n  padding: 20px;\r\n  color: #ffffff;\r\n}\r\n\r\n.header h1 {\r\n  text-decoration: underline;\r\n}\r\n\r\n.icon__refresh {\r\n  transform: rotate(90deg);\r\n  cursor: pointer;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5%;\r\n  gap: 2%;\r\n  color: black;\r\n}\r\n\r\nform input {\r\n  padding: 3%;\r\n  color: black;\r\n}\r\n\r\ninput, select, textarea{\r\n    color: #000;\r\n}\r\n\r\n.taskadder {\r\n  width: 100%;\r\n  border: none;\r\n  font-size: 20px;\r\n}\r\n\r\n.enter-icon {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\nli {\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n  border-top: 1px solid gainsboro;\r\n  border-bottom: 1px solid gainsboro;\r\n  padding: 20px;\r\n  font-size: 20px;\r\n}\r\n\r\n.checkbox {\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 10px;\r\n}\r\n\r\nli p {\r\n  width: 100%;\r\n  margin-left: 5px;\r\n}\r\n\r\n.draggable.dragging {\r\n  opacity: 0.1;\r\n  background-color: #7f8081;\r\n}\r\n\r\n.drag-btn {\r\n  cursor: move;\r\n}\r\n\r\n.trash-btn {\r\n  cursor: pointer;\r\n  display: none;\r\n}\r\n\r\n.editing {\r\n  background-color: rgb(136, 241, 198);\r\n}\r\n\r\n#clear {\r\n  margin: 5% auto;\r\n  width: 50%;\r\n  padding: 2%;\r\n  height: auto;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  justify-self: center;\r\n  border: 2px solid white;\r\n  border-radius: 10px;\r\n}\r\n\r\n#clear:hover {\r\n  background-color: white;\r\n  color: black;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,cAAc;EACd,+BAA+B;AACjC;;AAEA;EACE,+BAA+B;EAC/B,gBAAgB;EAChB,WAAW;EACX,YAAY;EACZ,mDAA4B;EAC5B,4BAA4B;EAC5B,yBAAyB;EACzB,2BAA2B;AAC7B;;AAEA;EACE,UAAU;EACV,iBAAiB;EACjB,eAAe;EACf,oCAAoC;EACpC,kCAAkC;EAClC,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,qBAAqB;EACrB,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,wBAAwB;EACxB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,WAAW;EACX,OAAO;EACP,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;IACI,WAAW;AACf;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,qBAAqB;EACrB,+BAA+B;EAC/B,kCAAkC;EAClC,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,yBAAyB;AAC3B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,eAAe;EACf,aAAa;AACf;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,eAAe;EACf,UAAU;EACV,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,eAAe;EACf,eAAe;EACf,6BAA6B;EAC7B,oBAAoB;EACpB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd",sourcesContent:['* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  color: #ffffff;\r\n  font-family: "lato", sans-serif;\r\n}\r\n\r\nbody {\r\n  font-family: "lato", sans-serif;\r\n  font-weight: 300;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: url(./todo.jfif);\r\n  background-repeat: no-repeat;\r\n  background-size: 70% 90vh;\r\n  background-position: center;\r\n}\r\n\r\n.to-do-container {\r\n  width: 60%;\r\n  max-width: 1000px;\r\n  margin: 8% auto;\r\n  border: 2px solid rgb(255, 255, 255);\r\n  background-color: rgb(5, 0, 0,0.6);\r\n  padding: 5% 10%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.form-container {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n  padding: 20px;\r\n  color: #ffffff;\r\n}\r\n\r\n.header h1 {\r\n  text-decoration: underline;\r\n}\r\n\r\n.icon__refresh {\r\n  transform: rotate(90deg);\r\n  cursor: pointer;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5%;\r\n  gap: 2%;\r\n  color: black;\r\n}\r\n\r\nform input {\r\n  padding: 3%;\r\n  color: black;\r\n}\r\n\r\ninput, select, textarea{\r\n    color: #000;\r\n}\r\n\r\n.taskadder {\r\n  width: 100%;\r\n  border: none;\r\n  font-size: 20px;\r\n}\r\n\r\n.enter-icon {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\nli {\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n  border-top: 1px solid gainsboro;\r\n  border-bottom: 1px solid gainsboro;\r\n  padding: 20px;\r\n  font-size: 20px;\r\n}\r\n\r\n.checkbox {\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 10px;\r\n}\r\n\r\nli p {\r\n  width: 100%;\r\n  margin-left: 5px;\r\n}\r\n\r\n.draggable.dragging {\r\n  opacity: 0.1;\r\n  background-color: #7f8081;\r\n}\r\n\r\n.drag-btn {\r\n  cursor: move;\r\n}\r\n\r\n.trash-btn {\r\n  cursor: pointer;\r\n  display: none;\r\n}\r\n\r\n.editing {\r\n  background-color: rgb(136, 241, 198);\r\n}\r\n\r\n#clear {\r\n  margin: 5% auto;\r\n  width: 50%;\r\n  padding: 2%;\r\n  height: auto;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  justify-self: center;\r\n  border: 2px solid white;\r\n  border-radius: 10px;\r\n}\r\n\r\n#clear:hover {\r\n  background-color: white;\r\n  color: black;\r\n}\r\n'],sourceRoot:""}]);const u=A},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);t&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),r.push(A))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[r].concat([i]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var i={},a=[],c=0;c<n.length;c++){var d=n[c],s=t.base?d[0]+t.base:d[0],A=i[s]||0,l="".concat(s," ").concat(A);i[s]=A+1;var u=e(l),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)r[u].references++,r[u].updater(p);else{var f=o(p,t);t.byIndex=c,r.splice(c,0,{identifier:l,updater:f,references:1})}a.push(l)}return a}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=e(i[a]);r[c].references--}for(var d=t(n,o),s=0;s<i.length;s++){var A=e(i[s]);0===r[A].references&&(r[A].updater(),r.splice(A,1))}i=d}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},776:(n,r,e)=>{n.exports=e.p+"07941fa045b368770f4d.jfif"}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={id:t,exports:{}};return n[t](i,i.exports,e),i.exports}e.m=n,e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var n=e(379),r=e.n(n),t=e(795),o=e.n(t),i=e(569),a=e.n(i),c=e(565),d=e.n(c),s=e(216),A=e.n(s),l=e(589),u=e.n(l),p=e(426),f={};f.styleTagTransform=u(),f.setAttributes=d(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=A(),r()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;class g{constructor(n){this.description=n,this.completed=!1,this.index=0}push(n){this.index=n.length,n.push(this),window.localStorage.setItem("tasklist",JSON.stringify(n)),window.location.reload()}}const E=document.getElementById("form"),m=document.querySelector(".taskadder"),h=document.querySelector("icon__refresh"),b=document.querySelector(".enter-icon"),C=document.getElementById("clear");let B;const x=n=>{n.forEach((n=>{document.getElementById("to_do").appendChild(document.createElement("li")).setAttribute("id",n.index);const r=document.getElementById(n.index);r.classList.add("task","draggable"),r.appendChild(document.createElement("input")).setAttribute("id",`${n.index}-checkbox`);const e=document.getElementById(`${n.index}-checkbox`);e.setAttribute("type","checkbox"),e.classList.add("checkbox"),r.appendChild(document.createElement("p")).setAttribute("id",`${n.index}-description`);const t=document.getElementById(`${n.index}-description`);t.classList.add("description"),t.innerText=n.description,r.appendChild(document.createElement("i")).setAttribute("id",`${n.index}-drag`);const o=document.getElementById(`${n.index}-drag`);o.classList.add("fas","fa-ellipsis-v","drag-btn"),r.appendChild(document.createElement("i")).setAttribute("id",`${n.index}-trash`),document.getElementById(`${n.index}-trash`).classList.add("far","fa-trash-alt","trash-btn"),function(n){const r=n.parentElement;n.addEventListener("mousedown",(()=>{r.setAttribute("draggable",!0)}))}(o)})),function(n){n.forEach((r=>{const e=document.getElementById(r.index);e.addEventListener("dragstart",(n=>{n.dataTransfer.setData("index",r.index)})),e.addEventListener("drop",(t=>{const o=t.dataTransfer.getData("index"),i=r.index,a=n[o],c=n[i];n[o]=c,n[i]=a,a.index=i,c.index=o,e.setAttribute("draggable",!1),window.localStorage.setItem("tasklist",JSON.stringify(n)),window.location.reload()})),e.addEventListener("dragover",(n=>{n.preventDefault()}))}))}(n),function(n){n.forEach((r=>{const e=document.getElementById(`${r.index}-checkbox`);e.addEventListener("change",(()=>{e.checked?(r.completed=!0,window.localStorage.setItem("tasklist",JSON.stringify(n))):(r.completed=!1,window.localStorage.setItem("tasklist",JSON.stringify(n)))}))}))}(n),function(n){n.forEach((n=>{const r=document.getElementById(`${n.index}-checkbox`);!0===n.completed?r.checked=!0:r.checked=!1}))}(n),function(n){n.forEach((r=>{const e=document.getElementById(`${r.index}-description`),t=document.getElementById(`${r.index}-drag`),o=document.getElementById(`${r.index}-trash`);e.addEventListener("click",(()=>{e.setAttribute("contenteditable",!0),e.classList.add("editing"),t.style.display="none",o.style.display="block"})),document.addEventListener("dblclick",(()=>{e.setAttribute("contenteditable",!1),e.classList.remove("editing"),t.style.display="block",o.style.display="none",r.description=e.innerHTML,window.localStorage.setItem("tasklist",JSON.stringify(n)),window.location.reload()}))}))}(n),function(n){n.forEach((r=>{const e=document.getElementById(`${r.index}-trash`),t=[];e.addEventListener("click",(()=>{t.push(r);const e=n.filter((n=>!t.includes(n)));e.forEach((n=>{n.index=e.indexOf(n)})),window.localStorage.setItem("tasklist",JSON.stringify(e)),window.location.reload()}))}))}(n)};E.addEventListener("submit",(n=>{n.preventDefault(),""!==m.value&&new g(m.value).push(B)})),b.addEventListener("click",(n=>{n.preventDefault(),""!==m.value&&new g(m.value).push(B)})),C.addEventListener("click",(n=>{n.preventDefault(),function(n){const r=[];n.forEach((e=>{if(!0===e.completed){r.push(e);const t=n.filter((n=>!r.includes(n)));t.forEach((n=>{n.index=t.indexOf(n)})),window.localStorage.setItem("tasklist",JSON.stringify(t)),window.location.reload()}}))}(B)})),h.addEventListener("click",(n=>{var r;n.preventDefault(),r=[],window.localStorage.setItem("tasklist",JSON.stringify(r)),window.location.reload()})),document.addEventListener("load",void(JSON.parse(localStorage.getItem("tasklist"))?(B=JSON.parse(localStorage.getItem("tasklist")),x(B)):(B=[],x(B))))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,